------ SQL JOIN ------
--- IS USED TO GET DATA FROM 2 OR MORE TABLES THAT RELATED TO EACH OUTER
-- PRIMARY KEY AND FOREIGN KEY RELATIONSHIP

--- INNER JOIN , LEFT OUTER JOIN , RIGHT OUTER JOIN , FULL OUTER JOIN

-- IN ORDER TO JOIN TWO TABLES THAT HAS RELATIONSHIP
-- SELECT DESIRED COLUMNS FROM BOTH TABLES
-- FROM TABLE 1
-- INNER JOIN TABLE 2 ON THE COMMON COLUMN

SELECT COUNTRIES.COUNTRY_NAME , REGIONS.REGION_NAME
FROM COUNTRIES
         INNER JOIN REGIONS ON COUNTRIES.REGION_ID = REGIONS.REGION_ID ;

-- we can use alias for table to make above query slightly more readable
-- nicknames are followed by space and the letter or word
-- you can use nickname to select the columns
-- just like you did in java obj.VariableName
SELECT c.COUNTRY_NAME , r.REGION_NAME
FROM COUNTRIES c
         INNER JOIN REGIONS r ON c.REGION_ID = r.REGION_ID ;

--- FIND OUT CITY (LOCATIONS) AND COUNTRY_NAME(COUNTRIES)
SELECT LOCATIONS.CITY, COUNTRIES.COUNTRY_NAME
FROM LOCATIONS
         INNER JOIN COUNTRIES ON LOCATIONS.COUNTRY_ID = COUNTRIES.COUNTRY_ID ;

-- WE WANT TO DISPLAY FIRST_NAME, DEPARTMENT_NAME
--- INCLUDING THOSE THAT DOES NOT HAVE MATCHING DEPARTMENT_ID
--- LIKE KIMBERLY HAS NULL DEPARTMENT ID BUT WE STILL WANT TO GET THAT DATA
--- 106
SELECT e.first_name, d.department_name
from employees e
left outer join
    DEPARTMENTS d on e.department_id = d.department_id;

--- -- WE WANT TO DISPLAY FIRST_NAME, DEPARTMENT_NAME
--- INCLUDING THOSE DEPARTMENTS THAT DOES NOT HAVE ANY MATCHING EMPLOYEES
--- 122

SELECT E.FIRST_NAME, D.DEPARTMENT_NAME
FROM EMPLOYEES E
RIGHT OUTER JOIN
    DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

--- -- WE WANT TO DISPLAY FIRST_NAME, DEPARTMENT_NAME
--- INCLUDING THOSE THAT DOES NOT HAVE MATCHING DEPARTMENT_ID
--- INCLUDING THOSE DEPARTMENTS THAT DOES NOT HAVE ANY MATCHING EMPLOYEES
--- 123

SELECT HELLO.FIRST_NAME, YOU.DEPARTMENT_NAME
FROM EMPLOYEES HELLO

FULL OUTER JOIN DEPARTMENTS YOU ON HELLO.DEPARTMENT_ID = YOU.DEPARTMENT_ID;

--- DISPLAY FIRST_NAME(EMPLOYEES)
--      AND JOB_TITLE(JOBS)
--      AND DEPARTMENT_NAME(DEPARTMENTS)
SELECT E.FIRST_NAME, J.JOB_TITLE, D.DEPARTMENT_NAME
FROM EMPLOYEES E
INNER JOIN JOBS J ON E.JOB_ID = J.JOB_ID
INNER JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

----- SELECT e.FIRST_NAME, d.DEPARTMENT_NAME
SELECT d.DEPARTMENT_NAME , COUNT(e.FIRST_NAME)
FROM EMPLOYEES e
         INNER JOIN DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
GROUP BY d.DEPARTMENT_NAME;


----  CONTINUE FROM ABOVE QUERY, FIND OUT THE MANAGER FIRST_NAME OF Executive
SELECT d.DEPARTMENT_NAME, e.FIRST_NAME
FROM DEPARTMENTS d
         INNER JOIN EMPLOYEES e ON d.MANAGER_ID = e.EMPLOYEE_ID
WHERE d.DEPARTMENT_NAME = 'Executive';


-- FIND OUT THE DEPARTMENT_NAME
--  AND THE MANAGER FIRST_NAME FOR EACH DEPARTMENTS
----  ONLY DISPLAY IF DEPARTMENT_NAME START WITH A
--WHERE d.DEPARTMENT_NAME LIKE 'A%';

SELECT D.DEPARTMENT_NAME,  E.FIRST_NAME
FROM DEPARTMENTS D
INNER JOIN EMPLOYEES E ON d.MANAGER_ID = E.MANAGER_ID
WHERE D.DEPARTMENT_NAME LIKE 'A%';




